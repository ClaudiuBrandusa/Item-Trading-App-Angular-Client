{"ast":null,"code":"import _asyncToGenerator from \"D:/Workspace/Angular/Item-Trading-App-Angular-Client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Interval } from 'src/app/models/utils/async-utils';\nimport { EndpointsService } from './endpoints.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./config.service\";\nimport * as i3 from \"./event-bus.service\";\nexport class NetworkService {\n  constructor(http, configService, injector, eventBus) {\n    this.http = http;\n    this.configService = configService;\n    this.injector = injector;\n    this.eventBus = eventBus;\n    this.loaded = false;\n    this.base_path = \"\";\n    this.InitEndpoints();\n  }\n\n  InitEndpoints() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.endpointsService = _this.injector.get(EndpointsService);\n      yield _this.SetBaseEndpoint();\n      yield _this.SetEndpointsModel();\n      yield _this.LoadEndpoints();\n      _this.loaded = true;\n    })();\n  }\n\n  SetBaseEndpoint() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.base_path != \"\") {\n        return true;\n      }\n\n      _this2.base_path = yield _this2.endpointsService.GetBasePath();\n      if (_this2.base_path == null) return false;\n      return true;\n    })();\n  }\n\n  WaitUntilIsLoaded() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return Interval(() => !_this3.loaded, 25, 3000);\n    })();\n  }\n\n}\n\nNetworkService.ɵfac = function NetworkService_Factory(t) {\n  return new (t || NetworkService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConfigService), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i3.EventBusService));\n};\n\nNetworkService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NetworkService,\n  factory: NetworkService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/Workspace/Angular/Item-Trading-App-Angular-Client/src/app/modules/shared/services/network.service.ts"],"names":["Interval","EndpointsService","i0","i1","i2","i3","NetworkService","constructor","http","configService","injector","eventBus","loaded","base_path","InitEndpoints","endpointsService","get","SetBaseEndpoint","SetEndpointsModel","LoadEndpoints","GetBasePath","WaitUntilIsLoaded","ɵfac","NetworkService_Factory","t","ɵɵinject","HttpClient","ConfigService","Injector","EventBusService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,QAAT,QAAyB,kCAAzB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,qBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,aAAP,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AACjD,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,aAAL;AACH;;AACKA,EAAAA,aAAa,GAAG;AAAA;;AAAA;AAClB,MAAA,KAAI,CAACC,gBAAL,GAAwB,KAAI,CAACL,QAAL,CAAcM,GAAd,CAAkBf,gBAAlB,CAAxB;AACA,YAAM,KAAI,CAACgB,eAAL,EAAN;AACA,YAAM,KAAI,CAACC,iBAAL,EAAN;AACA,YAAM,KAAI,CAACC,aAAL,EAAN;AACA,MAAA,KAAI,CAACP,MAAL,GAAc,IAAd;AALkB;AAMrB;;AACKK,EAAAA,eAAe,GAAG;AAAA;;AAAA;AACpB,UAAI,MAAI,CAACJ,SAAL,IAAkB,EAAtB,EAA0B;AACtB,eAAO,IAAP;AACH;;AACD,MAAA,MAAI,CAACA,SAAL,SAAuB,MAAI,CAACE,gBAAL,CAAsBK,WAAtB,EAAvB;AACA,UAAI,MAAI,CAACP,SAAL,IAAkB,IAAtB,EACI,OAAO,KAAP;AACJ,aAAO,IAAP;AAPoB;AAQvB;;AACKQ,EAAAA,iBAAiB,GAAG;AAAA;;AAAA;AACtB,aAAOrB,QAAQ,CAAC,MAAM,CAAC,MAAI,CAACY,MAAb,EAAqB,EAArB,EAAyB,IAAzB,CAAf;AADsB;AAEzB;;AA5BuB;;AA8B5BN,cAAc,CAACgB,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAIlB,cAAV,EAA0BJ,EAAE,CAACuB,QAAH,CAAYtB,EAAE,CAACuB,UAAf,CAA1B,EAAsDxB,EAAE,CAACuB,QAAH,CAAYrB,EAAE,CAACuB,aAAf,CAAtD,EAAqFzB,EAAE,CAACuB,QAAH,CAAYvB,EAAE,CAAC0B,QAAf,CAArF,EAA+G1B,EAAE,CAACuB,QAAH,CAAYpB,EAAE,CAACwB,eAAf,CAA/G,CAAP;AAAyJ,CAApN;;AACAvB,cAAc,CAACwB,KAAf,GAAuB,aAAc5B,EAAE,CAAC6B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE1B,cAAT;AAAyB2B,EAAAA,OAAO,EAAE3B,cAAc,CAACgB,IAAjD;AAAuDY,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import { Interval } from 'src/app/models/utils/async-utils';\r\nimport { EndpointsService } from './endpoints.service';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"./config.service\";\r\nimport * as i3 from \"./event-bus.service\";\r\nexport class NetworkService {\r\n    constructor(http, configService, injector, eventBus) {\r\n        this.http = http;\r\n        this.configService = configService;\r\n        this.injector = injector;\r\n        this.eventBus = eventBus;\r\n        this.loaded = false;\r\n        this.base_path = \"\";\r\n        this.InitEndpoints();\r\n    }\r\n    async InitEndpoints() {\r\n        this.endpointsService = this.injector.get(EndpointsService);\r\n        await this.SetBaseEndpoint();\r\n        await this.SetEndpointsModel();\r\n        await this.LoadEndpoints();\r\n        this.loaded = true;\r\n    }\r\n    async SetBaseEndpoint() {\r\n        if (this.base_path != \"\") {\r\n            return true;\r\n        }\r\n        this.base_path = await this.endpointsService.GetBasePath();\r\n        if (this.base_path == null)\r\n            return false;\r\n        return true;\r\n    }\r\n    async WaitUntilIsLoaded() {\r\n        return Interval(() => !this.loaded, 25, 3000);\r\n    }\r\n}\r\nNetworkService.ɵfac = function NetworkService_Factory(t) { return new (t || NetworkService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConfigService), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i3.EventBusService)); };\r\nNetworkService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: NetworkService, factory: NetworkService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}